- name: Templating .releaserc.yml
  template:
    src: templates/.releaserc.yml.j2
    dest: "{{ shipmate_cargo_dir }}/.releaserc.yml"

- name: Looking for VERSION.txt ...
  set_fact:
    shipmate_cargo_version: "{{ lookup('file', shipmate_cargo_dir+'/'+shipmate_version_file, errors='ignore') }}"
  failed_when: false
  ignore_errors: True

# - name: VERSION.txt not found. Updating Git ...
#   shell: git fetch --tags -f
#     chdir={{ shipmate_cargo_dir }}
#   when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"

- name: Trying to generate Version ...
  command: npx semantic-release --generate-notes false --dry-run --debug
    chdir="{{ shipmate_cargo_dir }}"
    creates="{{ shipmate_cargo_dir }}/{{ shipmate_version_file }}"
  when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"
  register: semantic_release

- name: Look what I found ...
  debug:
    msg: "SemRel Result: {{ semantic_release }}"
    verbosity: 1

- name: Looking for VERSION.txt ...
  set_fact:
    shipmate_cargo_version: "{{ lookup('file', shipmate_cargo_dir+'/'+shipmate_version_file) }}"

- name: Reporting ...
  debug:
    msg: "{{ semantic_release.stdout_lines[-1] }}"
  when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"

- name: Version ...
  debug:
    msg: "Version: {{ shipmate_cargo_version }}"
  when: "shipmate_cargo_version != '' or shipmate_cargo_version is defined"

- name: Giving up ...
  fail:
    msg: "YARRR! Cannot ship without a valid version. (Hint: VERSION.txt is missing)"
  when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"
  