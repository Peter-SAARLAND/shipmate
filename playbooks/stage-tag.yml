- name: Evaluating Version
  set_fact:
    shipmate_cargo_version: "{{ lookup('file', shipmate_cargo_dir+'/'+shipmate_version_file, errors='ignore') }}"
  failed_when: false
  ignore_errors: True
  no_log: True

# - name: "Merge-Request {{ shipmate_merge_request }}"
#   block:
#     - name: "Merge-Request {{ shipmate_merge_request }}"
#       copy: 
#         content="tag-{{ shipmate_branch }}-{{ shipmate_commit_id }}" 
#         dest={{ shipmate_cargo_dir }}/{{ shipmate_version_file }}
#   when: >
#     shipmate_merge_request is defined or shipmate_merge_request != "" and
#     shipmate_cargo_version is undefined or shipmate_cargo_version == ''

- name: "Generating Version"
  block:
    - name: Generating Version
      command: npx semantic-release --generate-notes false --dry-run --debug
        chdir="{{ shipmate_cargo_dir }}"
        creates="{{ shipmate_cargo_dir }}/{{ shipmate_version_file }}"
      register: tag
      no_log: true
      ignore_errors: True
    
    - name: Reporting
      debug:
        msg: "{{ tag.stdout.split('\n') }}"

    - name: Error Reporting
      pause:
        seconds: 1
        prompt: |
          #############################################
          ERROR
          #############################################
          {% for message in tag.stderr_lines %}
          {{ message }}
          {% endfor %}
          #############################################
      when: >
        tag.stderr_lines|length > 0

    - name: Deleting Default .releaserc
      file:
        state: absent
        path: "{{ shipmate_cargo_dir }}/.releaserc.yml"

  when: >
    shipmate_cargo_version is undefined or shipmate_cargo_version == ''

- name: Evaluating Version
  set_fact:
    shipmate_cargo_version: "{{ lookup('file', shipmate_cargo_dir+'/'+shipmate_version_file, errors='ignore') }}"
  failed_when: false
  ignore_errors: True
  no_log: True

- name: "Generating Version"
  block:
    - name: Generating Version
      copy: 
        content="{{ shipmate_commit_id }}-{{ shipmate_branch }}" 
        dest={{ shipmate_cargo_dir }}/{{ shipmate_version_file }}
      register: tag
      no_log: true
      ignore_errors: True

    - name: Reporting
      debug:
        msg: "{{ tag.stdout.split('\n') }}"

  when: >
    shipmate_cargo_version is undefined or shipmate_cargo_version == ''

- name: Evaluating Version
  set_fact:
    shipmate_cargo_version: "{{ lookup('file', shipmate_cargo_dir+'/'+shipmate_version_file, errors='ignore') }}"
  no_log: True
  when: >
    shipmate_cargo_version is undefined or shipmate_cargo_version == ''
# - name: VERSION.txt not found. Updating Git ...
#   shell: git fetch --tags -f
#     chdir={{ shipmate_cargo_dir }}
#   when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"
  
- name: Giving up
  fail:
    msg: "YARRR! Cannot ship without a valid version. (Hint: VERSION.txt is missing)"
  when: "shipmate_cargo_version == '' or shipmate_cargo_version is undefined"
  